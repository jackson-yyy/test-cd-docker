name: release

on:
  workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest # 运行环境
    steps:
      - name: checkout
        uses: actions/checkout@main

      - name: setup nodejs
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
      
      - name: 获取分支号
        id: vars
        run: echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}

      - name: 安装依赖
        run: 'npm install'

      - name: 前端项目打包
        run: npm run build

      - name: 构建镜像
        run: | 
          echo "准备构建镜像：test-cd-docker:${{ steps.vars.outputs.short_ref }}"
          docker build -f Dockerfile -t test-cd-docker:${{ steps.vars.outputs.short_ref }} .
          docker export -o test-cd-docker_${{ steps.vars.outputs.short_ref }}.tar test-cd-docker:${{ steps.vars.outputs.short_ref }}
          docker image ls

      - name: 创建远程目录
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.TENCENT_SERVER_HOST }}
          username: root
          key: ${{ secrets.TENCENT_SERVER_PRIVATE_KEY }}
          port: 22
          script: 'cd /www/ && ./mkdir.sh test-cd-docker && rm -rf /www/test-cd-docker/test-cd-docker_${{ steps.vars.outputs.short_ref }}.tar'

      - name: 上传镜像
        uses: burnett01/rsync-deployments@5.2.1
        with:
          switches: -avzr --delete --exclude="" --include="" --filter=""
          path: ./test-cd-docker_${{ steps.vars.outputs.short_ref }}.tar
          remote_path: /www/test-cd-docker
          remote_host: ${{ secrets.TENCENT_SERVER_HOST }}
          remote_port: 22
          remote_user: root
          remote_key: ${{ secrets.TENCENT_SERVER_PRIVATE_KEY }}
